3:I[6702,[],""]
5:I[8097,[],""]
6:I[4865,["513","static/chunks/513-54c786173a9c666c.js","122","static/chunks/122-1e2541ae7fd00b15.js","948","static/chunks/app/(content)/layout-98a57fd1c16e634e.js"],"NavTabs"]
7:I[4387,["185","static/chunks/app/layout-dc2409b386032b48.js"],"ThemeProvider"]
4:["slug","generic-gorm","d"]
8:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
9:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
a:{"display":"inline-block"}
b:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["dTjjhztIOlcgfOBlOdxsp",[[["",{"children":["(content)",{"children":["projects",{"children":[["slug","generic-gorm","d"],{"children":["__PAGE__?{\"slug\":\"generic-gorm\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(content)",{"children":["projects",{"children":[["slug","generic-gorm","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/58640552b67a3ac6.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","projects","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","projects","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","div",null,{"className":"min-h-screen bg-white dark:bg-neutral-900","children":[["$","$L6",null,{}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7b555c975a649a76.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__variable_1e4310 __variable_c3aa02 min-h-screen font-sans antialiased bg-background text-foreground dark:bg-neutral-900 dark:text-neutral-100 transition-colors","children":["$","$L7",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$8","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$9","children":"404"}],["$","div",null,{"style":"$a","children":["$","h2",null,{"style":"$b","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]}]],null],null],["$Lc",null]]]]
d:I[3642,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"BackButton"]
e:I[3298,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"ClientShare"]
f:I[6013,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"ContributorsList"]
10:I[6231,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"LazyImage"]
11:I[2181,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"ArticleContent"]
13:I[2027,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","218","static/chunks/app/(content)/projects/%5Bslug%5D/page-1fb59497e2c5c52a.js"],"TableOfContents"]
12:T2167,<blockquote>
<p>Have you ever wanted to streamline your GORM repository implementations? With Go generics, you can write reusable methods that work across all your models. Let‚Äôs dive into an exciting journey of creating a generic repository layer!</p>
</blockquote>
<h2 id="Ô∏è-step-1-create-a-base-repository">üèóÔ∏è Step 1: Create a Base Repository<span class="ml-2 opacity-0 hover:opacity-100"><a href="#Ô∏è-step-1-create-a-base-repository" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Install package <code>harryosmar/generic-gorm</code></p>
<pre><code class="hljs language-shell">go get github.com/harryosmar/generic-gorm
</code></pre>
<h2 id="Ô∏è-step-2-define-your-model">üõ†Ô∏è Step 2: Define Your Model<span class="ml-2 opacity-0 hover:opacity-100"><a href="#Ô∏è-step-2-define-your-model" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Let‚Äôs create a simple DummyModel and implement the required methods.</p>
<p><code>dummy_model.go</code></p>
<pre><code class="hljs language-go"><span class="hljs-keyword">package</span> main

<span class="hljs-keyword">type</span> DummyModel <span class="hljs-keyword">struct</span> {
	Id     <span class="hljs-type">int64</span>  <span class="hljs-string">`json:"id" gorm:"column:id"`</span>
	Field1 <span class="hljs-type">string</span> <span class="hljs-string">`json:"field_1" gorm:"column:field_1"`</span>
}

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(t DummyModel)</span></span> TableName() <span class="hljs-type">string</span> {
	<span class="hljs-keyword">return</span> <span class="hljs-string">"dummy"</span>
}

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-params">(t DummyModel)</span></span> PrimaryKey() <span class="hljs-type">string</span> {
	<span class="hljs-keyword">return</span> <span class="hljs-string">"id"</span>
}
</code></pre>
<h2 id="-step-3-create-a-repository-for-your-model">üß© Step 3: Create a Repository for Your Model<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-step-3-create-a-repository-for-your-model" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Now, let's tie the <code>DummyModel</code>  with our generic base repository.</p>
<p><code>dummy_repository.go</code></p>
<pre><code class="hljs language-go"><span class="hljs-keyword">package</span> main

<span class="hljs-keyword">import</span> (
	<span class="hljs-string">"context"</span>
	<span class="hljs-string">"github.com/harryosmar/generic-gorm/base"</span>
	log <span class="hljs-string">"github.com/sirupsen/logrus"</span>
	<span class="hljs-string">"gorm.io/gorm"</span>
)


<span class="hljs-keyword">type</span> MySQLDummyRepository <span class="hljs-keyword">struct</span> {
	*base.BaseGorm[DummyEntities, <span class="hljs-type">int64</span>]
}

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">NewMySQLDummyRepository</span><span class="hljs-params">(db *gorm.DB)</span></span> *MySQLDummyRepository {
	<span class="hljs-keyword">return</span> &#x26;MySQLDummyRepository{
		base.NewBaseGorm[DummyModel, <span class="hljs-type">int64</span>](db),
	}
}

<span class="hljs-comment">//  Create MySQLDummyRepository with inherited methods from ./base/core.go :</span>
<span class="hljs-comment">//  Gorm with generic with methods :</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) Detail(ctx context.Context, id PkType) (*T, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) Wheres(ctx context.Context, wheres []Where)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) WheresList(ctx context.Context, orders []OrderBy, wheres []Where) ([]T, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) List(ctx context.Context, page int, pageSize int, orders []OrderBy, wheres []Where) ([]T, *Paginator, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) Create(ctx context.Context, row *T) (*T, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) CreateMultiple(ctx context.Context, rows []*T) ([]*T, int64, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) Update(ctx context.Context, row *T, updatedColumns []string) (int64, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) UpdateWhere(ctx context.Context, wheres []Where, values map[string]interface{}) (int64, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) Upsert(ctx context.Context, row *T, onConflictUpdatedColumns []string) (int64, error)</span>
<span class="hljs-comment">//      - (o *BaseGorm[T, PkType]) ListCustom(ctx context.Context, page int, pageSize int, orders []OrderBy, wheres []Where, customCallback ListCustomCallback) ([]T, *Paginator, error)</span>
</code></pre>
<h2 id="-step-4-use-your-repository">‚ú® Step 4: Use Your Repository<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-step-4-use-your-repository" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Here's where things get interesting! Let's see how easy it is to interact with the database using our new repository.</p>
<p>Main Function Example</p>
<pre><code class="hljs language-go"><span class="hljs-keyword">package</span> main

<span class="hljs-keyword">import</span> (
	<span class="hljs-string">"context"</span>
	<span class="hljs-string">"log"</span>

	<span class="hljs-string">"gorm.io/driver/sqlite"</span>
	<span class="hljs-string">"gorm.io/gorm"</span>
)

<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {
	<span class="hljs-comment">// Initialize GORM with SQLite (or your database of choice)</span>
	db, err := gorm.Open(sqlite.Open(<span class="hljs-string">"test.db"</span>), &#x26;gorm.Config{})
	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> {
		log.Fatalf(<span class="hljs-string">"Failed to connect to the database: %v"</span>, err)
	}

	<span class="hljs-comment">// Auto-migrate the DummyModel</span>
	_ = db.AutoMigrate(&#x26;DummyModel{})

	<span class="hljs-comment">// Initialize the repository</span>
	repo := NewMySQLDummyRepository(db)

	<span class="hljs-comment">// Create a new DummyModel record</span>
	newDummy := &#x26;DummyModel{Field1: <span class="hljs-string">"Hello, Generics!"</span>}
	createdDummy, err := repo.Create(context.Background(), newDummy)
	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> {
		log.Fatalf(<span class="hljs-string">"Failed to create record: %v"</span>, err)
	}
	log.Printf(<span class="hljs-string">"Created DummyModel: %+v"</span>, createdDummy)

	<span class="hljs-comment">// Fetch a record by ID</span>
	detail, err := repo.Detail(context.Background(), createdDummy.ID)
	<span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> {
		log.Fatalf(<span class="hljs-string">"Failed to fetch record: %v"</span>, err)
	}
	log.Printf(<span class="hljs-string">"Fetched DummyModel: %+v"</span>, detail)
}
</code></pre>
<h2 id="-explore-more-features">üöÄ Explore More Features<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-explore-more-features" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Your generic base repository can include powerful features like:</p>
<ul>
<li>Filtering: Easily fetch records with dynamic WHERE conditions.</li>
<li>Pagination: Add support for paginated lists.</li>
<li>Upserts: Simplify inserting or updating records.</li>
<li>Custom Queries: Use GORM's raw queries alongside generics.</li>
</ul>
<p>Here are the generic methods provided by BaseGorm:</p>
<ul>
<li>Detail(ctx, id)</li>
<li>Create(ctx, row)</li>
<li>Update(ctx, row, updatedColumns)</li>
<li>Upsert(ctx, row, onConflictColumns)</li>
<li>List(ctx, page, pageSize, orders, wheres)</li>
</ul>
<p>Feel free to explore and extend these methods based on your needs!</p>
<h2 id="-why-use-this-approach">üåü Why Use This Approach?<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-why-use-this-approach" class="anchor" aria-hidden="true">#</a></span></h2>
<ul>
<li>Reusability: Write once, use for all models.</li>
<li>Maintainability: Centralize common logic, making your codebase cleaner.</li>
<li>Type Safety: Generics ensure your code is safe and predictable.</li>
</ul>
<p>Now, go ahead and power up your GORM-based applications with this dynamic and reusable repository pattern! üôå</p>2:["$","div",null,{"className":"min-h-screen","children":[["$","div",null,{"children":["$","div",null,{"className":"max-w-[692px] mx-auto px-4 pt-20 pb-12","children":[["$","div",null,{"className":"flex items-center justify-between mb-12","children":[["$","$Ld",null,{"href":"/projects","label":"‚Üê Projects","className":"text-sm text-neutral-500 hover:text-neutral-900 dark:hover:text-neutral-100"}],["$","$Le",null,{"type":"projects","slug":"generic-gorm","title":"Generic GORM"}]]}],["$","h1",null,{"className":"text-4xl font-serif mb-4 text-neutral-900 dark:text-neutral-100","children":"Generic GORM"}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","span","Go",{"className":"px-3 py-1 text-sm rounded-full bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400","children":"Go"}],["$","span","ORM",{"className":"px-3 py-1 text-sm rounded-full bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400","children":"ORM"}],["$","span","Generic",{"className":"px-3 py-1 text-sm rounded-full bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400","children":"Generic"}],["$","span","Inheritance",{"className":"px-3 py-1 text-sm rounded-full bg-neutral-100 dark:bg-neutral-800 text-neutral-600 dark:text-neutral-400","children":"Inheritance"}]]}],["$","div",null,{"className":"flex gap-4 mb-8","children":[["$","a",null,{"href":"https://github.com/harryosmar/generic-gorm","target":"_blank","rel":"noopener noreferrer","className":"inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-neutral-100 dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100 hover:bg-neutral-200 dark:hover:bg-neutral-700 transition-colors","children":[["$","span",null,{"children":"GitHub"}],["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-external-link","children":[["$","path","1q9fwt",{"d":"M15 3h6v6"}],["$","path","gplh6r",{"d":"M10 14 21 3"}],["$","path","a6xqqp",{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],"$undefined"]}]]}],""]}],["$","$Lf",null,{"contributors":["harry-osmar-sitohang"],"className":"mb-8","style":"github"}],["$","div",null,{"className":"aspect-video rounded-xl overflow-hidden mb-12","children":["$","$L10",null,{"src":"/images/projects/generic-gorm.png","alt":"Generic GORM","width":692,"height":389,"className":"w-full h-full object-cover","priority":true}]}]]}]}],["$","div",null,{"className":"relative","children":["$","div",null,{"className":"lg:grid lg:grid-cols-[692px_250px] lg:gap-16 lg:justify-center","children":[["$","article",null,{"className":"mx-auto w-full px-4 pb-20","children":[["$","div",null,{"className":"sticky top-0 z-10 -mx-4 px-4 py-3 bg-white/95 dark:bg-neutral-900/95 backdrop-blur-sm border-b border-neutral-200 dark:border-neutral-800","children":["$","div",null,{"className":"flex items-center justify-between max-w-[692px] mx-auto","children":[["$","div",null,{"className":"flex items-center gap-4","children":["$","h2",null,{"className":"text-sm font-medium text-neutral-900 dark:text-neutral-100","children":"Generic GORM"}]}],["$","$Le",null,{"type":"projects","slug":"generic-gorm","title":"Generic GORM"}]]}]}],["$","div",null,{"className":"mt-8 prose dark:prose-invert prose-neutral max-w-none prose-headings:font-serif prose-headings:tracking-tight prose-headings:font-normal prose-h2:text-[24px] prose-h2:leading-[32px] prose-p:text-neutral-800 dark:prose-p:text-neutral-200 prose-p:leading-[32px] prose-a:text-neutral-900 dark:prose-a:text-neutral-100 prose-a:decoration-neutral-300 dark:prose-a:decoration-neutral-700 hover:prose-a:decoration-neutral-600 dark:hover:prose-a:decoration-neutral-400","children":["$","$L11",null,{"content":"$12"}]}]]}],["$","aside",null,{"className":"hidden lg:block","children":["$","div",null,{"className":"sticky top-20","children":["$","$L13",null,{}]}]}]]}]}]]}]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Generic GORM | Harry Osmar Sitohang | Harry Osmar Sitohang"}],["$","meta","3",{"name":"description","content":"Generic GORM"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"application-name","content":"Harry Osmar Sitohang"}],["$","meta","6",{"name":"linkedin:card","content":"summary_large_image"}],["$","meta","7",{"name":"linkedin:title","content":"Generic GORM | Harry Osmar Sitohang"}],["$","meta","8",{"name":"linkedin:description","content":"Generic GORM"}],["$","meta","9",{"name":"linkedin:image","content":"/images/projects/generic-gorm.png"}],["$","meta","10",{"name":"linkedin:creator","content":"Harry Osmar Sitohang"}],["$","meta","11",{"name":"al:ios:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Fprojects%2Fgeneric-gorm"}],["$","meta","12",{"name":"al:android:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Fprojects%2Fgeneric-gorm"}],["$","meta","13",{"name":"al:ios:app_store_id","content":"288429040"}],["$","meta","14",{"name":"al:android:package","content":"com.linkedin.android"}],["$","meta","15",{"name":"al:ios:app_name","content":"LinkedIn"}],["$","meta","16",{"name":"al:android:app_name","content":"LinkedIn"}],["$","meta","17",{"property":"og:title","content":"Generic GORM | Harry Osmar Sitohang"}],["$","meta","18",{"property":"og:description","content":"Generic GORM"}],["$","meta","19",{"property":"og:url","content":"https://www.harryosmarsitohang.com/projects/generic-gorm"}],["$","meta","20",{"property":"og:site_name","content":"Harry Osmar Sitohang"}],["$","meta","21",{"property":"og:locale","content":"en_US"}],["$","meta","22",{"property":"og:image","content":"https://www.harryosmarsitohang.com/images/projects/generic-gorm.png"}],["$","meta","23",{"property":"og:image:width","content":"1200"}],["$","meta","24",{"property":"og:image:height","content":"630"}],["$","meta","25",{"property":"og:image:alt","content":"Generic GORM"}],["$","meta","26",{"property":"og:type","content":"article"}],["$","meta","27",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","28",{"name":"twitter:title","content":"Generic GORM | Harry Osmar Sitohang"}],["$","meta","29",{"name":"twitter:description","content":"Generic GORM"}],["$","meta","30",{"name":"twitter:image","content":"https://www.harryosmarsitohang.com/images/projects/generic-gorm.png"}],["$","link","31",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","32",{"name":"next-size-adjust"}]]
1:null
