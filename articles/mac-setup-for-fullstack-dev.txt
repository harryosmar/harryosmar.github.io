3:I[6702,[],""]
5:I[8097,[],""]
6:I[4865,["513","static/chunks/513-54c786173a9c666c.js","122","static/chunks/122-1e2541ae7fd00b15.js","948","static/chunks/app/(content)/layout-98a57fd1c16e634e.js"],"NavTabs"]
7:I[4387,["185","static/chunks/app/layout-dc2409b386032b48.js"],"ThemeProvider"]
4:["slug","mac-setup-for-fullstack-dev","d"]
8:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
9:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
a:{"display":"inline-block"}
b:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["Kum8O4eJQoEsvPOcF65SI",[[["",{"children":["(content)",{"children":["articles",{"children":[["slug","mac-setup-for-fullstack-dev","d"],{"children":["__PAGE__?{\"slug\":\"mac-setup-for-fullstack-dev\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(content)",{"children":["articles",{"children":[["slug","mac-setup-for-fullstack-dev","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/58640552b67a3ac6.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/6583aec57b22070b.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","articles","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","articles","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","div",null,{"className":"min-h-screen bg-white dark:bg-neutral-900","children":[["$","$L6",null,{}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7b555c975a649a76.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__variable_1e4310 __variable_c3aa02 min-h-screen font-sans antialiased bg-background text-foreground dark:bg-neutral-900 dark:text-neutral-100 transition-colors","children":["$","$L7",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$8","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$9","children":"404"}],["$","div",null,{"style":"$a","children":["$","h2",null,{"style":"$b","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]}]],null],null],["$Lc",null]]]]
d:I[3642,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"BackButton"]
e:I[3298,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"ClientShare"]
f:I[6231,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"LazyImage"]
10:I[1514,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],""]
11:I[2181,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"ArticleContent"]
13:I[2027,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"TableOfContents"]
12:T441c,<blockquote>
<p>Recommendation: Use zsh as your default shell for a smoother experience.</p>
</blockquote>
<h2 id="1-iterm2">1. Iterm2<span class="ml-2 opacity-0 hover:opacity-100"><a href="#1-iterm2" class="anchor" aria-hidden="true">#</a></span></h2>
<blockquote>
<p>Replace your default terminal with iTerm2—a modern terminal with advanced features.</p>
</blockquote>
<p><a href="https://iterm2.com/index.html">Download iTerm2</a></p>
<p>Settings Update</p>
<p>Enable natural text editing:</p>
<pre><code>Settings > Profiles > Keys > Key Mappings > Presets... > Natural Text Editing
</code></pre>
<h2 id="2-homebrew">2. Homebrew<span class="ml-2 opacity-0 hover:opacity-100"><a href="#2-homebrew" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Homebrew is a package manager for macOS that simplifies installing software and libraries.</p>
<ul>
<li><a href="https://brew.sh/">Visit Homebrew Website</a></li>
</ul>
<p>Install Homebrew by running:</p>
<pre><code class="hljs language-bash">/bin/bash -c <span class="hljs-string">"<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>"</span>
</code></pre>
<h3 id="3-git">3. Git<span class="ml-2 opacity-0 hover:opacity-100"><a href="#3-git" class="anchor" aria-hidden="true">#</a></span></h3>
<p>Git is essential for version control in software development.</p>
<p>Install Git using Homebrew:</p>
<pre><code class="hljs language-bash">brew install git
</code></pre>
<h4 id="31-ssh-key">3.1 ssh key</h4>
<p>Set up SSH keys for secure access to Git repositories.</p>
<ul>
<li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Guide: Generating and Adding SSH Keys</a></li>
</ul>
<pre><code class="hljs language-bash"><span class="hljs-comment"># Generate a new SSH key:</span>
ssh-keygen -t ed25519 -C <span class="hljs-string">"your_email@example.com"</span>

<span class="hljs-comment"># Check your keys:</span>
<span class="hljs-built_in">ls</span> ~/.ssh
</code></pre>
<p>Copy the public key:</p>
<pre><code class="hljs language-bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_ed25519.pub
</code></pre>
<p>Add it to your GitHub account <a href="https://github.com/settings/ssh/new">here</a>.</p>
<h4 id="32-gitconfig">3.2 .gitconfig</h4>
<p>Update your <code>~/.gitconfig</code> file:</p>
<pre><code>[url "git@gitlab.com:"]
	insteadOf = https://gitlab.com/
[url "git@github.com:"]
	insteadOf = https://github.com/
[user]
	name = Your Name
	email = your_email@example.com
</code></pre>
<h2 id="4-oh-my-zsh">4. oh-my-zsh<span class="ml-2 opacity-0 hover:opacity-100"><a href="#4-oh-my-zsh" class="anchor" aria-hidden="true">#</a></span></h2>
<blockquote>
<p>Supercharge your shell with Oh My Zsh!</p>
</blockquote>
<p>Oh My Zsh provides themes and plugins to enhance your terminal experience.</p>
<ul>
<li><a href="https://ohmyz.sh/">Visit Oh My Zsh</a></li>
</ul>
<p>Install it with:</p>
<pre><code class="hljs language-bash">sh -c <span class="hljs-string">"<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>"</span>
</code></pre>
<h2 id="5-asdf">5. asdf<span class="ml-2 opacity-0 hover:opacity-100"><a href="#5-asdf" class="anchor" aria-hidden="true">#</a></span></h2>
<blockquote>
<p>Manage multiple runtime versions with asdf.</p>
</blockquote>
<p>asdf simplifies managing different versions of programming languages and tools.</p>
<ul>
<li><a href="https://asdf-vm.com/">Visit asdf</a></li>
</ul>
<p>Recommend using the official git method</p>
<p>Install asdf:</p>
<pre><code class="hljs language-bash">git <span class="hljs-built_in">clone</span> https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.15.0
</code></pre>
<p>Add this to <code>~/.zshrc</code>:</p>
<pre><code>. "$HOME/.asdf/asdf.sh"
</code></pre>
<h3 id="6-nodejs">6. nodejs<span class="ml-2 opacity-0 hover:opacity-100"><a href="#6-nodejs" class="anchor" aria-hidden="true">#</a></span></h3>
<p>Install Node.js using asdf:</p>
<pre><code class="hljs language-bash"><span class="hljs-comment"># install plugin nodejs</span>
asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git

<span class="hljs-comment"># list installed plugin</span>
asdf plugin list

<span class="hljs-comment"># Install a Version</span>
asdf install nodejs nodejs

<span class="hljs-comment"># Set a Version</span>
asdf global nodejs nodejs

<span class="hljs-comment"># check current nodejs version</span>
node -v
</code></pre>
<p>Install global npm packages</p>
<pre><code class="hljs language-bash">npm install -g yarn pnpm
</code></pre>
<h2 id="7-pyenv">7. Pyenv<span class="ml-2 opacity-0 hover:opacity-100"><a href="#7-pyenv" class="anchor" aria-hidden="true">#</a></span></h2>
<blockquote>
<p>Manage Python versions seamlessly.</p>
</blockquote>
<p>Pyenv helps you install and switch between Python versions easily.</p>
<ul>
<li><a href="https://github.com/pyenv/pyenv">Visit Pyenv</a></li>
</ul>
<p>Install Pyenv:</p>
<pre><code class="hljs language-bash"><span class="hljs-comment"># Update homebrew and install pyenv</span>
brew update
brew install pyenv
</code></pre>
<p>Update your shell environment:</p>
<pre><code class="hljs language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">'export PYENV_ROOT="$HOME/.pyenv"'</span> >> ~/.zshrc
<span class="hljs-built_in">echo</span> <span class="hljs-string">'[[ -d $PYENV_ROOT/bin ]] &#x26;&#x26; export PATH="$PYENV_ROOT/bin:$PATH"'</span> >> ~/.zshrc
<span class="hljs-built_in">echo</span> <span class="hljs-string">'eval "$(pyenv init - zsh)"'</span> >> ~/.zshrc
<span class="hljs-built_in">source</span> ~/.zshrc
</code></pre>
<p>Install Python:</p>
<pre><code class="hljs language-bash">pyenv install 3.10.4
pyenv global 3.10.4
</code></pre>
<h3 id="71-venv">7.1 venv<span class="ml-2 opacity-0 hover:opacity-100"><a href="#71-venv" class="anchor" aria-hidden="true">#</a></span></h3>
<blockquote>
<p>A Python virtual environment (venv)</p>
</blockquote>
<p>Create and activate a virtual environment to isolate dependencies:</p>
<ul>
<li><a href="https://docs.python.org/3/library/venv.html">https://docs.python.org/3/library/venv.html</a></li>
</ul>
<pre><code class="hljs language-bash"><span class="hljs-built_in">mkdir</span> demo-python &#x26;&#x26; <span class="hljs-built_in">cd</span>  demo-pyton
python -m venv myvenv
<span class="hljs-built_in">source</span>  myvenv/bin/activate
</code></pre>
<p><code>pip</code> usage in venv, eg: install <code>Flask</code></p>
<pre><code class="hljs language-bash"><span class="hljs-comment"># install Flask api framework</span>
pip install Flask
</code></pre>
<p>Create file <code>hello.py</code> inside <code>/demo-python</code> directory</p>
<pre><code class="hljs language-python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask

app = Flask(__name__)

<span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">"/"</span></span>)</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">hello_world</span>():
    <span class="hljs-keyword">return</span> <span class="hljs-string">"&#x3C;p>Hello, World!&#x3C;/p>"</span>
</code></pre>
<p>Serving Flask app <code>hello.py</code></p>
<pre><code class="hljs language-bash">flask --app hello run
</code></pre>
<p>Create file <code>requirements.txt</code></p>
<pre><code class="hljs language-bash">pip freeze > requirements.txt
</code></pre>
<h2 id="8java">8.Java<span class="ml-2 opacity-0 hover:opacity-100"><a href="#8java" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Java is essential for backend services and enterprise applications.</p>
<p>Download and install your preferred version, <em>Choose <code>macOS</code> > ARM64 DMG Installer</em>:</p>
<ul>
<li><a href="https://www.oracle.com/id/java/technologies/downloads/#java23">java 23</a></li>
<li><a href="https://www.oracle.com/id/java/technologies/downloads/#java11">java 11</a></li>
</ul>
<p>Update your <code>~/.zshrc</code></p>
<pre><code>#export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-23.jdk/Contents/Home
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home
export PATH=$JAVA_HOME/bin:$PATH
</code></pre>
<p>Reload and verify:</p>
<pre><code class="hljs language-bash"><span class="hljs-built_in">source</span> ~/.zshrc
java --version
</code></pre>
<h2 id="9go">9.Go<span class="ml-2 opacity-0 hover:opacity-100"><a href="#9go" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Go is a fast and efficient language widely used for backend development.</p>
<ul>
<li><a href="https://go.dev/dl/">Download Go</a></li>
</ul>
<p>Configure Go environment, edit <code>~/.zshrc</code>, add content below:</p>
<pre><code># Go private packages
export GOPRIVATE=github.com/Your-Repo
# Go Path
export GOPATH="$HOME/go"
# Go Root Versions
#export GOROOT="$HOME/sdk/go1.23.4"
#export GOROOT="$HOME/sdk/go1.23.0"
export GOROOT="$HOME/sdk/go1.22.10"
export GOBIN="$GOROOT/bin"
export PATH=$GOBIN:$PATH
</code></pre>
<p>Reload and verify:</p>
<pre><code class="hljs language-bash"><span class="hljs-built_in">source</span> ~/.zshrc
go <span class="hljs-built_in">env</span>
go version
</code></pre>
<p>Your code should stored in <code>$GOPATH/src</code>. Go mod package will be stored in <code>$GOPATH/pkg</code>.</p>
<h2 id="10kube">10.Kube<span class="ml-2 opacity-0 hover:opacity-100"><a href="#10kube" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Kubernetes is essential for managing containerized applications.</p>
<h3 id="101-kubeconfig">10.1 .kube/config<span class="ml-2 opacity-0 hover:opacity-100"><a href="#101-kubeconfig" class="anchor" aria-hidden="true">#</a></span></h3>
<p>First create your <code>~/.kube/config</code> file with format :</p>
<pre><code class="hljs language-yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">clusters:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">cluster:</span>
    <span class="hljs-attr">certificate-authority-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">server:</span> <span class="hljs-string">https://host1:port</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">cluster1</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">cluster:</span>
    <span class="hljs-attr">certificate-authority-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">server:</span> <span class="hljs-string">https://host2:port</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">cluster2</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">cluster:</span>
    <span class="hljs-attr">certificate-authority-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">server:</span> <span class="hljs-string">https://host3:port</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">cluster3</span>
<span class="hljs-attr">contexts:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">context:</span>
    <span class="hljs-attr">cluster:</span> <span class="hljs-string">cluster1</span>
    <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span>
    <span class="hljs-attr">user:</span> <span class="hljs-string">me-cluster1-user</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster1-ctx</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">context:</span>
    <span class="hljs-attr">cluster:</span> <span class="hljs-string">cluster2</span>
    <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span>
    <span class="hljs-attr">user:</span> <span class="hljs-string">me-cluster2-user</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster2-ctx</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">context:</span>
    <span class="hljs-attr">cluster:</span> <span class="hljs-string">cluster3</span>
    <span class="hljs-attr">namespace:</span> <span class="hljs-string">default</span>
    <span class="hljs-attr">user:</span> <span class="hljs-string">me-cluster3-user</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster3-ctx</span>
<span class="hljs-attr">current-context:</span> <span class="hljs-string">me-cluster1-ctx</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Config</span>
<span class="hljs-attr">preferences:</span> {}
<span class="hljs-attr">users:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster1-user</span>
  <span class="hljs-attr">user:</span>
    <span class="hljs-attr">client-certificate-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">client-key-data:</span> <span class="hljs-string">KEY-DATA</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster2-user</span>
  <span class="hljs-attr">user:</span>
    <span class="hljs-attr">client-certificate-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">client-key-data:</span> <span class="hljs-string">KEY-DATA</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">me-cluster3-user</span>
  <span class="hljs-attr">user:</span>
    <span class="hljs-attr">client-certificate-data:</span> <span class="hljs-string">CERT-DATA</span>
    <span class="hljs-attr">client-key-data:</span> <span class="hljs-string">KEY-DATA</span>
</code></pre>
<h3 id="102-kubectl">10.2 kubectl<span class="ml-2 opacity-0 hover:opacity-100"><a href="#102-kubectl" class="anchor" aria-hidden="true">#</a></span></h3>
<p><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/">kubectl</a></p>
<p>Download and set up kubectl:</p>
<pre><code class="hljs language-bash"><span class="hljs-comment"># Download the latest release</span>
curl -LO <span class="hljs-string">"https://dl.k8s.io/release/<span class="hljs-subst">$(curl -L -s https://dl.k8s.io/release/stable.txt)</span>/bin/darwin/arm64/kubectl"</span>

<span class="hljs-comment"># Validate the binary (optional)</span>
curl -LO <span class="hljs-string">"https://dl.k8s.io/release/<span class="hljs-subst">$(curl -L -s https://dl.k8s.io/release/stable.txt)</span>/bin/darwin/arm64/kubectl.sha256"</span>

<span class="hljs-comment"># Make the kubectl binary executable.</span>
<span class="hljs-built_in">chmod</span> +x ./kubectl

<span class="hljs-comment"># create /usr/local/bin if not exist</span>
<span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /usr/local/bin

<span class="hljs-comment"># Move the kubectl binary to a file location on your system PATH.</span>
<span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> ./kubectl /usr/local/bin/kubectl
<span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> root: /usr/local/bin/kubectl

<span class="hljs-comment"># Test to ensure the version you installed is up-to-date</span>
kubectl version --client
</code></pre>
<h3 id="103-zsh-kubectl-prompt">10.3 zsh-kubectl-prompt<span class="ml-2 opacity-0 hover:opacity-100"><a href="#103-zsh-kubectl-prompt" class="anchor" aria-hidden="true">#</a></span></h3>
<p>Enhance your shell prompt with cluster info :</p>
<ul>
<li><a href="https://github.com/superbrothers/zsh-kubectl-prompt">zsh-kubectl-prompt</a></li>
</ul>
<pre><code class="hljs language-bash"><span class="hljs-built_in">cd</span> ~
git <span class="hljs-built_in">clone</span> git@github.com:superbrothers/zsh-kubectl-prompt
</code></pre>
<p>Update <code>~/.zshrc</code></p>
<pre><code># kubeinfo
autoload -U colors; colors
source ~/zsh-kubectl-prompt/kubectl.zsh
RPROMPT='%{$fg[green]%}($ZSH_KUBECTL_PROMPT)%{$reset_color%}'
alias k='kubectl'
alias ksn='_f(){k get namespace $1 > /dev/null; if [ $? -eq 1 ]; then return $?; fi;  k config set-context $(k config current-context) --namespace=$1; echo "Namespace: $1"};_f'
alias ksc='_f(){k config get-contexts $1 > /dev/null; if [ $? -eq 1 ]; then return $?; fi;  k config use-context $1; echo "Context: $1"};_f'
#Usage:
#➜  ~ ksn dev1                                                       (dev-context/dev1)
#     Context "dev-context" modified.
#     Namespace: dev1

#➜  ~ ksn ff                                                         (dev-context/dev1)
#     Error from server (NotFound): namespaces "ff" not found
[[ /usr/local/bin/kubectl ]] &#x26;&#x26; source &#x3C;(kubectl completion zsh)
</code></pre>
<h4 id="1031-switch-namespace">10.3.1 Switch namespace</h4>
<p>Change namespace in current kube context<code>me-cluster1-ctx</code> namespace <code>default</code> to namespace <code>staging</code></p>
<pre><code class="hljs language-bash">ksn staging
</code></pre>
<h4 id="1032-switch-context">10.3.2 Switch context</h4>
<p>Change namespace in current kube context<code>me-cluster1-ctx</code> to context <code>me-cluster2-ctx</code></p>
<pre><code class="hljs language-bash">ksc me-cluster2-ctx
</code></pre>
<blockquote>
<p>That’s it! With these steps, your MacBook is primed for full-stack development. 🎉</p>
</blockquote>2:["$","div",null,{"className":"min-h-screen","children":[["$","div",null,{"children":["$","div",null,{"className":"max-w-[692px] mx-auto px-4 pt-20 pb-12","children":[["$","div",null,{"className":"flex items-center justify-between mb-12","children":[["$","$Ld",null,{"href":"/articles","label":"← Articles","className":"text-sm text-neutral-500 hover:text-neutral-900 dark:hover:text-neutral-100"}],["$","$Le",null,{"type":"articles","slug":"mac-setup-for-fullstack-dev","title":"macbook setup guide for fullstack developer"}]]}],["$","h1",null,{"className":"text-4xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100 mb-8","children":"macbook setup guide for fullstack developer"}],["$","div",null,{"className":"flex items-start gap-3 mb-12","children":[["$","div",null,{"className":"w-12 h-12 rounded-full overflow-hidden flex-shrink-0","children":["$","$Lf",null,{"src":"/images/about/harry.jpeg","alt":"Harry Osmar Sitohang","width":48,"height":48,"className":"w-full h-full object-cover"}]}],["$","div",null,{"className":"flex flex-col flex-1","children":[["$","div",null,{"className":"flex items-center justify-between","children":["$","$L10",null,{"href":"/about/harry-osmar-sitohang","className":"text-[15px] font-medium text-neutral-900 dark:text-neutral-100 hover:underline","children":"Harry Osmar Sitohang"}]}],["$","div",null,{"className":"flex items-center gap-1 text-[14px] text-neutral-500","children":[["$","div",null,{"className":"text-neutral-500","children":"Senior Principal Engineer"}],["$","span",null,{"children":"·"}],["$","time",null,{"dateTime":"2024-12-28T15:00:00+07:00","children":"Dec 28, 2024"}],["$","span",null,{"children":"·"}],["$","span",null,{"children":[5," min read"]}]]}]]}]]}],["$","div",null,{"className":"relative aspect-[16/9] rounded-lg overflow-hidden mb-12","children":["$","$Lf",null,{"src":"/images/articles/mac-setup-for-fullstack-dev.webp","alt":"macbook setup guide for fullstack developer","fill":true,"className":"object-cover","priority":true}]}]]}]}],["$","div",null,{"className":"relative","children":["$","div",null,{"className":"lg:grid lg:grid-cols-[692px_250px] lg:gap-16 lg:justify-center","children":[["$","article",null,{"className":"mx-auto w-full px-4 pb-20","children":[["$","div",null,{"className":"sticky top-0 z-10 -mx-4 px-4 py-3 bg-white/95 dark:bg-neutral-900/95 backdrop-blur-sm border-b border-neutral-200 dark:border-neutral-800","children":["$","div",null,{"className":"flex items-center justify-between max-w-[692px] mx-auto","children":[["$","div",null,{"className":"flex items-center gap-4","children":["$","h2",null,{"className":"text-sm font-medium text-neutral-900 dark:text-neutral-100","children":"macbook setup guide for fullstack developer"}]}],["$","$Le",null,{"type":"projects","slug":"mac-setup-for-fullstack-dev","title":"macbook setup guide for fullstack developer"}]]}]}],["$","div",null,{"className":"mt-8 prose dark:prose-invert prose-neutral max-w-none prose-headings:font-serif prose-headings:tracking-tight prose-headings:font-normal prose-h2:text-[24px] prose-h2:leading-[32px] prose-p:text-neutral-800 dark:prose-p:text-neutral-200 prose-p:leading-[32px] prose-a:text-neutral-900 dark:prose-a:text-neutral-100 prose-a:decoration-neutral-300 dark:prose-a:decoration-neutral-700 hover:prose-a:decoration-neutral-600 dark:hover:prose-a:decoration-neutral-400","children":["$","$L11",null,{"content":"$12"}]}]]}],["$","aside",null,{"className":"hidden lg:block px-4","children":["$","div",null,{"className":"sticky top-8","children":["$","$L13",null,{}]}]}]]}]}]]}]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"macbook setup guide for fullstack developer"}],["$","meta","3",{"name":"description","content":"This guide walks you through setting up key tools such as Git, oh-my-zsh, asdf for managing versions of different programming languages, and more."}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"application-name","content":"Harry Osmar Sitohang"}],["$","meta","6",{"name":"linkedin:card","content":"summary_large_image"}],["$","meta","7",{"name":"linkedin:title","content":"macbook setup guide for fullstack developer"}],["$","meta","8",{"name":"linkedin:description","content":"This guide walks you through setting up key tools such as Git, oh-my-zsh, asdf for managing versions of different programming languages, and more."}],["$","meta","9",{"name":"linkedin:image","content":"/images/articles/mac-setup-for-fullstack-dev.webp"}],["$","meta","10",{"name":"linkedin:creator","content":"Harry Osmar Sitohang"}],["$","meta","11",{"name":"al:ios:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Farticles%2Fmac-setup-for-fullstack-dev"}],["$","meta","12",{"name":"al:android:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Farticles%2Fmac-setup-for-fullstack-dev"}],["$","meta","13",{"name":"al:ios:app_store_id","content":"288429040"}],["$","meta","14",{"name":"al:android:package","content":"com.linkedin.android"}],["$","meta","15",{"name":"al:ios:app_name","content":"LinkedIn"}],["$","meta","16",{"name":"al:android:app_name","content":"LinkedIn"}],["$","meta","17",{"property":"og:title","content":"macbook setup guide for fullstack developer"}],["$","meta","18",{"property":"og:description","content":"This guide walks you through setting up key tools such as Git, oh-my-zsh, asdf for managing versions of different programming languages, and more."}],["$","meta","19",{"property":"og:url","content":"https://www.harryosmarsitohang.com/articles/mac-setup-for-fullstack-dev"}],["$","meta","20",{"property":"og:site_name","content":"Harry Osmar Sitohang"}],["$","meta","21",{"property":"og:locale","content":"en_US"}],["$","meta","22",{"property":"og:image","content":"https://www.harryosmarsitohang.com/images/articles/mac-setup-for-fullstack-dev.webp"}],["$","meta","23",{"property":"og:image:width","content":"1200"}],["$","meta","24",{"property":"og:image:height","content":"630"}],["$","meta","25",{"property":"og:image:alt","content":"macbook setup guide for fullstack developer"}],["$","meta","26",{"property":"og:type","content":"article"}],["$","meta","27",{"property":"article:published_time","content":"2024-12-28T15:00:00+07:00"}],["$","meta","28",{"property":"article:author","content":"https://www.harryosmarsitohang.com/about/Harry Osmar Sitohang (Senior Principal Engineer)"}],["$","meta","29",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","30",{"name":"twitter:title","content":"macbook setup guide for fullstack developer"}],["$","meta","31",{"name":"twitter:description","content":"This guide walks you through setting up key tools such as Git, oh-my-zsh, asdf for managing versions of different programming languages, and more."}],["$","meta","32",{"name":"twitter:image","content":"https://www.harryosmarsitohang.com/images/articles/mac-setup-for-fullstack-dev.webp"}],["$","link","33",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","34",{"name":"next-size-adjust"}]]
1:null
