3:I[6702,[],""]
5:I[8097,[],""]
6:I[4865,["513","static/chunks/513-54c786173a9c666c.js","122","static/chunks/122-1e2541ae7fd00b15.js","948","static/chunks/app/(content)/layout-98a57fd1c16e634e.js"],"NavTabs"]
7:I[4387,["185","static/chunks/app/layout-dc2409b386032b48.js"],"ThemeProvider"]
4:["slug","strapi-middleware-cache","d"]
8:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
9:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
a:{"display":"inline-block"}
b:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["PlR9C5cXL2EyhtO2H0Ffg",[[["",{"children":["(content)",{"children":["articles",{"children":[["slug","strapi-middleware-cache","d"],{"children":["__PAGE__?{\"slug\":\"strapi-middleware-cache\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(content)",{"children":["articles",{"children":[["slug","strapi-middleware-cache","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/58640552b67a3ac6.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/6583aec57b22070b.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","articles","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children","articles","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","div",null,{"className":"min-h-screen bg-white dark:bg-neutral-900","children":[["$","$L6",null,{}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(content)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7b555c975a649a76.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__variable_1e4310 __variable_c3aa02 min-h-screen font-sans antialiased bg-background text-foreground dark:bg-neutral-900 dark:text-neutral-100 transition-colors","children":["$","$L7",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$8","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$9","children":"404"}],["$","div",null,{"style":"$a","children":["$","h2",null,{"style":"$b","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]}]}]],null],null],["$Lc",null]]]]
d:I[3642,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"BackButton"]
e:I[3298,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"ClientShare"]
f:I[6231,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"LazyImage"]
10:I[1514,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],""]
11:I[2181,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"ArticleContent"]
13:I[2027,["513","static/chunks/513-54c786173a9c666c.js","189","static/chunks/189-76139bfb22cdcfc2.js","122","static/chunks/122-1e2541ae7fd00b15.js","637","static/chunks/637-6e55fbf6c1f17bbc.js","353","static/chunks/app/(content)/articles/%5Bslug%5D/page-e12b9a0df8b2e915.js"],"TableOfContents"]
12:T3f73,<p>Caching is an essential optimization technique in web development, helping <strong>reduce database load</strong> and significantly <strong>speeding up response times</strong>. If you‚Äôre building a Strapi-based application, adding a caching layer can make your API lightning-fast while maintaining scalability.</p>
<h2 id="requirements">Requirements<span class="ml-2 opacity-0 hover:opacity-100"><a href="#requirements" class="anchor" aria-hidden="true">#</a></span></h2>
<pre><code class="hljs language-json"><span class="hljs-punctuation">{</span>
  <span class="hljs-attr">"dependencies"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
    <span class="hljs-attr">"@strapi/strapi"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"5.1.0"</span><span class="hljs-punctuation">,</span>
    <span class="hljs-attr">"ioredis"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"^5.4.1"</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>

</code></pre>
<h2 id="-why-add-caching-in-strapi">üöÄ Why Add Caching in Strapi?<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-why-add-caching-in-strapi" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Strapi provides a robust backend for APIs, but database queries can become a bottleneck as traffic grows. By adding caching to Strapi:</p>
<ul>
<li>Boost API <strong>response time</strong>: Serve cached data directly, avoiding repetitive database queries.</li>
<li><strong>Reduce</strong> backend load: Offload frequent reads to an in-memory store like Redis.</li>
<li>Enhance <strong>scalability</strong>: Handle higher traffic without straining your database.</li>
</ul>
<h2 id="flow">Flow<span class="ml-2 opacity-0 hover:opacity-100"><a href="#flow" class="anchor" aria-hidden="true">#</a></span></h2>
<h3 id="normal-flow">Normal flow<span class="ml-2 opacity-0 hover:opacity-100"><a href="#normal-flow" class="anchor" aria-hidden="true">#</a></span></h3>
<img src="/images/mermaid/mermaid-b87006366ef0ef03ba349357c7f73b87.svg" alt="Mermaid diagram">
<h3 id="clear_cache-flow">clear_cache Flow<span class="ml-2 opacity-0 hover:opacity-100"><a href="#clear_cache-flow" class="anchor" aria-hidden="true">#</a></span></h3>
<img src="/images/mermaid/mermaid-e3b912d91bb683f397b46239682fa223.svg" alt="Mermaid diagram">
<h2 id="-installing-redis-for-caching">üì¶ Installing Redis for Caching<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-installing-redis-for-caching" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Install <code>ioredis</code> to interact with Redis, because we're using redis as cache provider.</p>
<pre><code class="hljs language-shell">npm install ioredis
</code></pre>
<h2 id="Ô∏è-setting-up-middleware-in-strapi">üõ†Ô∏è Setting Up Middleware in Strapi<span class="ml-2 opacity-0 hover:opacity-100"><a href="#Ô∏è-setting-up-middleware-in-strapi" class="anchor" aria-hidden="true">#</a></span></h2>
<p>To add a custom middleware, Strapi requires you to:</p>
<ol>
<li>Register it in the middleware configuration file (<code>./config/middlewares.ts</code>).</li>
<li>Create the middleware file in directory <code>./src/middlewares/</code>, then implement the middleware logic.</li>
</ol>
<h3 id="1-middleware-registration">1. Middleware Registration<span class="ml-2 opacity-0 hover:opacity-100"><a href="#1-middleware-registration" class="anchor" aria-hidden="true">#</a></span></h3>
<p>In <code>./config/middlewares.ts</code>, register your middleware as a global middleware:</p>
<p>register new <code>global::cache-middleware</code></p>
<pre><code class="hljs language-typescript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> [
  <span class="hljs-string">'strapi::logger'</span>,
  <span class="hljs-string">'strapi::errors'</span>,
  <span class="hljs-string">'strapi::security'</span>,
  <span class="hljs-string">'strapi::cors'</span>,
  <span class="hljs-string">'strapi::poweredBy'</span>,
  <span class="hljs-string">'strapi::query'</span>,
  <span class="hljs-string">'strapi::body'</span>,
  <span class="hljs-string">'strapi::session'</span>,
  <span class="hljs-string">'strapi::favicon'</span>,
  <span class="hljs-string">'strapi::public'</span>,
  <span class="hljs-string">'global::cache-middleware'</span> <span class="hljs-comment">// Register cache middleware here</span>
];
</code></pre>
<h3 id="2--create-the-cache-middleware-file">2. üß© Create the Cache Middleware file<span class="ml-2 opacity-0 hover:opacity-100"><a href="#2--create-the-cache-middleware-file" class="anchor" aria-hidden="true">#</a></span></h3>
<p>Create a new middleware file, <code>cache-middleware.ts</code>, in the <code>./src/middlewares/</code> directory</p>
<p>Full Implementation</p>
<pre><code class="hljs language-typescript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Redis</span> <span class="hljs-keyword">from</span> <span class="hljs-string">'ioredis'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-title function_">default</span> (config, { strapi }) => {
    <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CACHE_TIMEOUT</span> = <span class="hljs-number">1000</span>; <span class="hljs-comment">// Connection timeout</span>
    <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">CACHE_EXPIRATION</span> = process.<span class="hljs-property">env</span>.<span class="hljs-property">REDIS_CACHE_EXPIRATION</span> || <span class="hljs-number">3600</span>; <span class="hljs-comment">// Default TTL: 1 hour</span>

    <span class="hljs-keyword">const</span> redis = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Redis</span>(process.<span class="hljs-property">env</span>.<span class="hljs-property">REDIS_URL</span> || <span class="hljs-string">'redis://localhost:6379'</span>, {
        <span class="hljs-attr">connectTimeout</span>: <span class="hljs-variable constant_">CACHE_TIMEOUT</span>,
        <span class="hljs-attr">commandTimeout</span>: <span class="hljs-variable constant_">CACHE_TIMEOUT</span>,
        <span class="hljs-attr">retryStrategy</span>: <span class="hljs-function">(<span class="hljs-params">times</span>) =></span> (times &#x3C;= <span class="hljs-number">1</span> ? <span class="hljs-variable constant_">CACHE_TIMEOUT</span> : <span class="hljs-literal">null</span>)
    });

    redis.<span class="hljs-title function_">on</span>(<span class="hljs-string">'error'</span>, <span class="hljs-function">(<span class="hljs-params">error</span>) =></span> {
        strapi.<span class="hljs-property">log</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">'Redis connection error:'</span>, error);
    });

    <span class="hljs-keyword">return</span> <span class="hljs-title function_">async</span> (ctx, next) => {
        <span class="hljs-keyword">const</span> start = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>();
        <span class="hljs-keyword">const</span> matches = ctx.<span class="hljs-property">path</span>.<span class="hljs-title function_">match</span>(<span class="hljs-regexp">/^\/?api(\/.+)$/</span>);

        <span class="hljs-comment">// Skip non-GET requests or non-API paths</span>
        <span class="hljs-keyword">if</span> (ctx.<span class="hljs-property">method</span> !== <span class="hljs-string">'GET'</span> || !matches || matches.<span class="hljs-property">length</span> !== <span class="hljs-number">2</span>) {
            <span class="hljs-keyword">await</span> <span class="hljs-title function_">next</span>();
            <span class="hljs-keyword">return</span>;
        }

        <span class="hljs-keyword">const</span> queryParams = <span class="hljs-keyword">new</span> <span class="hljs-title class_">URLSearchParams</span>(ctx.<span class="hljs-property">querystring</span>);
        <span class="hljs-keyword">const</span> shouldClearCache = queryParams.<span class="hljs-title function_">get</span>(<span class="hljs-string">'clear_cache'</span>) === <span class="hljs-string">'1'</span>;
        queryParams.<span class="hljs-title function_">delete</span>(<span class="hljs-string">'clear_cache'</span>); <span class="hljs-comment">// Remove clear_cache from cache key</span>
        <span class="hljs-keyword">const</span> cacheKey = <span class="hljs-string">`strapi:cache:<span class="hljs-subst">${ctx.path}</span>?<span class="hljs-subst">${<span class="hljs-built_in">decodeURIComponent</span>(queryParams.toString())}</span>`</span>;

        <span class="hljs-keyword">const</span> <span class="hljs-title function_">tryRedisOperation</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">operation, retryCount = <span class="hljs-number">1</span></span>) => {
            <span class="hljs-keyword">try</span> {
                <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">operation</span>();
            } <span class="hljs-keyword">catch</span> (error) {
                <span class="hljs-keyword">if</span> (retryCount > <span class="hljs-number">0</span>) {
                    strapi.<span class="hljs-property">log</span>.<span class="hljs-title function_">warn</span>(<span class="hljs-string">'Redis operation failed, retrying...'</span>);
                    <span class="hljs-keyword">return</span> <span class="hljs-title function_">tryRedisOperation</span>(operation, retryCount - <span class="hljs-number">1</span>);
                }
                <span class="hljs-keyword">throw</span> error;
            }
        };

        <span class="hljs-keyword">try</span> {
            <span class="hljs-keyword">if</span> (shouldClearCache) {
                <span class="hljs-keyword">await</span> <span class="hljs-title function_">tryRedisOperation</span>(<span class="hljs-function">() =></span> redis.<span class="hljs-title function_">del</span>(cacheKey));
                strapi.<span class="hljs-property">log</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">`Cache cleared for: <span class="hljs-subst">${cacheKey}</span>`</span>);
                ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Cache'</span>, <span class="hljs-string">'CLEARED'</span>);
            }

            <span class="hljs-keyword">const</span> cachedResponse = <span class="hljs-keyword">await</span> <span class="hljs-title function_">tryRedisOperation</span>(<span class="hljs-function">() =></span> redis.<span class="hljs-title function_">get</span>(cacheKey));
            <span class="hljs-keyword">if</span> (cachedResponse &#x26;&#x26; !shouldClearCache) {
                <span class="hljs-keyword">const</span> { body, headers, status } = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(cachedResponse);
                ctx.<span class="hljs-property">body</span> = body;
                ctx.<span class="hljs-property">status</span> = status;
                <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">entries</span>(headers).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">[key, value]</span>) =></span> ctx.<span class="hljs-title function_">set</span>(key, value <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>));
                ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Cache'</span>, <span class="hljs-string">'HIT'</span>);
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-keyword">await</span> <span class="hljs-title function_">next</span>();

                <span class="hljs-keyword">if</span> (ctx.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) {
                    <span class="hljs-keyword">const</span> response = {
                        <span class="hljs-attr">body</span>: ctx.<span class="hljs-property">body</span>,
                        <span class="hljs-attr">headers</span>: ctx.<span class="hljs-property">response</span>.<span class="hljs-property">headers</span>,
                        <span class="hljs-attr">status</span>: ctx.<span class="hljs-property">status</span>
                    };
                    <span class="hljs-keyword">await</span> <span class="hljs-title function_">tryRedisOperation</span>(<span class="hljs-function">() =></span>
                        redis.<span class="hljs-title function_">setex</span>(cacheKey, <span class="hljs-variable constant_">CACHE_EXPIRATION</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(response))
                    );
                    ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Cache'</span>, shouldClearCache ? <span class="hljs-string">'CLEARED+MISS'</span> : <span class="hljs-string">'MISS'</span>);
                } <span class="hljs-keyword">else</span> {
                    ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Cache'</span>, <span class="hljs-string">'SKIP'</span>);
                }
            }
        } <span class="hljs-keyword">catch</span> (error) {
            ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Cache'</span>, <span class="hljs-string">'ERROR'</span>);
            strapi.<span class="hljs-property">log</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">'Cache middleware error:'</span>, error);
            <span class="hljs-keyword">await</span> <span class="hljs-title function_">next</span>();
        }

        ctx.<span class="hljs-title function_">set</span>(<span class="hljs-string">'X-Response-Time'</span>, <span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-built_in">Date</span>.now() - start}</span>ms`</span>);
    };
};
</code></pre>
<h2 id="environment-variables-to-configure-cache">Environment variables to configure cache<span class="ml-2 opacity-0 hover:opacity-100"><a href="#environment-variables-to-configure-cache" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Make sure to run command below, before start the strapi app</p>
<pre><code class="hljs language-shell">export REDIS_CACHE_EXPIRATION=3600
export REDIS_URL=redis://:password@localhost:6379
export CACHE_TIMEOUT=1000
</code></pre>
<h2 id="-cache-invalidation-with-query-parameters">üîÑ Cache Invalidation with Query Parameters<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-cache-invalidation-with-query-parameters" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Add <code>?clear_cache=1</code> to any API endpoint to clear its cache. For example:</p>
<pre><code class="hljs language-shell">GET /api/users?clear_cache=1
</code></pre>
<h2 id="-cache-response-headers">üìù Cache Response Headers<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-cache-response-headers" class="anchor" aria-hidden="true">#</a></span></h2>
<p>To track cache usage, the middleware sets an <code>X-Cache</code> header:</p>
<ul>
<li><code>HIT</code>: Data was served from the cache.</li>
<li><code>MISS</code>: Data was retrieved from the source and cached.</li>
<li><code>CLEARED</code>: Cache was invalidated for the request.</li>
<li><code>CLEARED+MISS</code>: Cache was cleared, and fresh data was stored.</li>
<li><code>ERROR</code>: Redis operation failed.</li>
</ul>
<h2 id="-conclusion">üöÄ Conclusion<span class="ml-2 opacity-0 hover:opacity-100"><a href="#-conclusion" class="anchor" aria-hidden="true">#</a></span></h2>
<p>Adding a Redis-powered cache middleware to Strapi can drastically improve performance, scalability, and user experience. By following this guide, you‚Äôll have a flexible caching solution ready to handle high traffic while keeping your application responsive.</p>
<p>Give your Strapi API a performance boost‚Äîstart caching with Redis today! üöÄ</p>2:["$","div",null,{"className":"min-h-screen","children":[["$","div",null,{"children":["$","div",null,{"className":"max-w-[692px] mx-auto px-4 pt-20 pb-12","children":[["$","div",null,{"className":"flex items-center justify-between mb-12","children":[["$","$Ld",null,{"href":"/articles","label":"‚Üê Articles","className":"text-sm text-neutral-500 hover:text-neutral-900 dark:hover:text-neutral-100"}],["$","$Le",null,{"type":"articles","slug":"strapi-middleware-cache","title":"Implementing a Redis-Powered Cache Middleware in Strapi"}]]}],["$","h1",null,{"className":"text-4xl font-bold tracking-tight text-neutral-900 dark:text-neutral-100 mb-8","children":"Implementing a Redis-Powered Cache Middleware in Strapi"}],["$","div",null,{"className":"flex items-start gap-3 mb-12","children":[["$","div",null,{"className":"w-12 h-12 rounded-full overflow-hidden flex-shrink-0","children":["$","$Lf",null,{"src":"/images/about/harry.jpeg","alt":"Harry Osmar Sitohang","width":48,"height":48,"className":"w-full h-full object-cover"}]}],["$","div",null,{"className":"flex flex-col flex-1","children":[["$","div",null,{"className":"flex items-center justify-between","children":["$","$L10",null,{"href":"/about/harry-osmar-sitohang","className":"text-[15px] font-medium text-neutral-900 dark:text-neutral-100 hover:underline","children":"Harry Osmar Sitohang"}]}],["$","div",null,{"className":"flex items-center gap-1 text-[14px] text-neutral-500","children":[["$","div",null,{"className":"text-neutral-500","children":"Senior Principal Engineer"}],["$","span",null,{"children":"¬∑"}],["$","time",null,{"dateTime":"2024-12-10T12:49:00+07:00","children":"Dec 10, 2024"}],["$","span",null,{"children":"¬∑"}],["$","span",null,{"children":[4," min read"]}]]}]]}]]}],["$","div",null,{"className":"relative aspect-[16/9] rounded-lg overflow-hidden mb-12","children":["$","$Lf",null,{"src":"/images/articles/strapi-middleware-cache.webp","alt":"Implementing a Redis-Powered Cache Middleware in Strapi","fill":true,"className":"object-cover","priority":true}]}]]}]}],["$","div",null,{"className":"relative","children":["$","div",null,{"className":"lg:grid lg:grid-cols-[692px_250px] lg:gap-16 lg:justify-center","children":[["$","article",null,{"className":"mx-auto w-full px-4 pb-20","children":[["$","div",null,{"className":"sticky top-0 z-10 -mx-4 px-4 py-3 bg-white/95 dark:bg-neutral-900/95 backdrop-blur-sm border-b border-neutral-200 dark:border-neutral-800","children":["$","div",null,{"className":"flex items-center justify-between max-w-[692px] mx-auto","children":[["$","div",null,{"className":"flex items-center gap-4","children":["$","h2",null,{"className":"text-sm font-medium text-neutral-900 dark:text-neutral-100","children":"Implementing a Redis-Powered Cache Middleware in Strapi"}]}],["$","$Le",null,{"type":"projects","slug":"strapi-middleware-cache","title":"Implementing a Redis-Powered Cache Middleware in Strapi"}]]}]}],["$","div",null,{"className":"mt-8 prose dark:prose-invert prose-neutral max-w-none prose-headings:font-serif prose-headings:tracking-tight prose-headings:font-normal prose-h2:text-[24px] prose-h2:leading-[32px] prose-p:text-neutral-800 dark:prose-p:text-neutral-200 prose-p:leading-[32px] prose-a:text-neutral-900 dark:prose-a:text-neutral-100 prose-a:decoration-neutral-300 dark:prose-a:decoration-neutral-700 hover:prose-a:decoration-neutral-600 dark:hover:prose-a:decoration-neutral-400","children":["$","$L11",null,{"content":"$12"}]}]]}],["$","aside",null,{"className":"hidden lg:block px-4","children":["$","div",null,{"className":"sticky top-8","children":["$","$L13",null,{}]}]}]]}]}]]}]
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Implementing a Redis-Powered Cache Middleware in Strapi | Harry Osmar Sitohang | Harry Osmar Sitohang"}],["$","meta","3",{"name":"description","content":"This article dives into creating and configuring a Redis-powered cache middleware for Strapi. You‚Äôll learn how to handle dynamic caching, invalidate caches, and configure Redis seamlessly."}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"application-name","content":"Harry Osmar Sitohang"}],["$","meta","6",{"name":"linkedin:card","content":"summary_large_image"}],["$","meta","7",{"name":"linkedin:title","content":"Implementing a Redis-Powered Cache Middleware in Strapi | Harry Osmar Sitohang"}],["$","meta","8",{"name":"linkedin:description","content":"This article dives into creating and configuring a Redis-powered cache middleware for Strapi. You‚Äôll learn how to handle dynamic caching, invalidate caches, and configure Redis seamlessly."}],["$","meta","9",{"name":"linkedin:image","content":"/images/articles/strapi-middleware-cache.webp"}],["$","meta","10",{"name":"linkedin:creator","content":"Harry Osmar Sitohang"}],["$","meta","11",{"name":"al:ios:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Farticles%2Fstrapi-middleware-cache"}],["$","meta","12",{"name":"al:android:url","content":"linkedin://shareArticle?mini=true&url=https%3A%2F%2Fwww.harryosmarsitohang.com%2Farticles%2Fstrapi-middleware-cache"}],["$","meta","13",{"name":"al:ios:app_store_id","content":"288429040"}],["$","meta","14",{"name":"al:android:package","content":"com.linkedin.android"}],["$","meta","15",{"name":"al:ios:app_name","content":"LinkedIn"}],["$","meta","16",{"name":"al:android:app_name","content":"LinkedIn"}],["$","meta","17",{"property":"og:title","content":"Implementing a Redis-Powered Cache Middleware in Strapi | Harry Osmar Sitohang"}],["$","meta","18",{"property":"og:description","content":"This article dives into creating and configuring a Redis-powered cache middleware for Strapi. You‚Äôll learn how to handle dynamic caching, invalidate caches, and configure Redis seamlessly."}],["$","meta","19",{"property":"og:url","content":"https://www.harryosmarsitohang.com/articles/strapi-middleware-cache"}],["$","meta","20",{"property":"og:site_name","content":"Harry Osmar Sitohang"}],["$","meta","21",{"property":"og:locale","content":"en_US"}],["$","meta","22",{"property":"og:image","content":"https://www.harryosmarsitohang.com/images/articles/strapi-middleware-cache.webp"}],["$","meta","23",{"property":"og:image:width","content":"1200"}],["$","meta","24",{"property":"og:image:height","content":"630"}],["$","meta","25",{"property":"og:image:alt","content":"Implementing a Redis-Powered Cache Middleware in Strapi"}],["$","meta","26",{"property":"og:type","content":"article"}],["$","meta","27",{"property":"article:published_time","content":"2024-12-10T12:49:00+07:00"}],["$","meta","28",{"property":"article:author","content":"https://www.harryosmarsitohang.com/about/harry-osmar-sitohang"}],["$","meta","29",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","30",{"name":"twitter:title","content":"Implementing a Redis-Powered Cache Middleware in Strapi | Harry Osmar Sitohang"}],["$","meta","31",{"name":"twitter:description","content":"This article dives into creating and configuring a Redis-powered cache middleware for Strapi. You‚Äôll learn how to handle dynamic caching, invalidate caches, and configure Redis seamlessly."}],["$","meta","32",{"name":"twitter:image","content":"https://www.harryosmarsitohang.com/images/articles/strapi-middleware-cache.webp"}],["$","link","33",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","34",{"name":"next-size-adjust"}]]
1:null
